#!/bin/sh
#############################################################################
# alien-installer - a front-end script to install and configure AliEn
#############################################################################
#
# modification history
# $Log$
# Revision 1.51  2005/06/03 08:47:50  buncic
# ditto...
#
# Revision 1.50  2005/06/03 08:42:52  buncic
# typo
#
# Revision 1.49  2005/06/03 08:34:45  buncic
# Fixing multiple met package list.
#
# Revision 1.48  2005/06/03 08:21:47  buncic
# Added --force option for update.
#
# Revision 1.47  2005/06/02 12:16:28  buncic
# Do not clean target directory.
#
# Revision 1.46  2005/06/02 10:57:23  buncic
# Adding root to gshell meta package.
#
# Revision 1.45  2005/06/02 08:22:43  buncic
# Typo.
#
# Revision 1.44  2005/06/02 08:09:20  buncic
# No default meta package selected.
#
# Revision 1.43  2005/06/02 07:54:52  buncic
# Adding gshell and monitor meta packages
#
# Revision 1.42  2005/06/02 07:29:40  buncic
# Preparing for v2-0-5 release.
#
# Revision 1.41  2005/05/19 07:58:43  buncic
# Using separate binary repository for each release.
#
# Revision 1.40  2005/05/17 10:55:00  buncic
# Skip installation log dump if there was no error.
#
# Revision 1.39  2005/05/17 10:22:00  buncic
# Adding --force flag.
#
# Revision 1.38  2005/05/17 04:49:22  buncic
# PReserve output in case of error.
#
# Revision 1.37  2005/05/11 04:20:18  buncic
# Added warning message if user selects prefix directory same as workspace.
#
# Revision 1.36  2005/05/10 10:49:48  buncic
# This is v2.0.4 rc1.
#
# Revision 1.35  2005/04/27 08:11:13  buncic
# Added autopackage tools and apkg as alternative installer.
#
# Revision 1.34  2005/04/25 10:54:22  buncic
# Fixed configuration step.
#
# Revision 1.33  2005/04/01 11:47:40  buncic
# Cleanup..
#
# Revision 1.32  2005/04/01 10:35:45  buncic
# Fix to alien-installer
#
# Revision 1.31  2005/03/31 07:50:11  buncic
# Always update from CVS.
#
# Revision 1.30  2005/03/15 07:37:01  buncic
# Tests added to CVS.
#
# Revision 1.29  2005/03/14 13:37:19  buncic
# Grrr..
#
# Revision 1.28  2005/03/14 13:21:03  buncic
# Added options to configure installer w/o dialog (from command line)
#
# Revision 1.27  2005/03/14 10:58:42  buncic
# Typo.,..
#
# Revision 1.26  2005/03/14 10:08:56  buncic
# Avoid using backticks.
#
# Revision 1.25  2005/03/14 09:52:39  buncic
# Fixed problem with dialog running under su.
#
# Revision 1.24  2005/03/11 12:47:49  buncic
# Fixed release version problem.
#
# Revision 1.23  2005/03/11 11:14:35  buncic
# Changed format of release tag.
#
# Revision 1.22  2005/03/11 09:37:44  buncic
# Fixed problem with double sync
#
# Revision 1.21  2005/03/10 05:11:24  buncic
# Again
#
# Revision 1.20  2005/03/08 14:16:50  buncic
# Always use dialog from /opt/alien if it exists.
#
# Revision 1.19  2005/03/08 14:12:46  buncic
# Require dialog > 1.0 to process forms.
#
# Revision 1.18  2005/03/08 14:09:43  buncic
# Typo
#
# Revision 1.17  2005/03/08 13:52:50  buncic
# Check that alien-installer exists upin cvs checkout.
#
# Revision 1.16  2005/03/02 12:18:07  buncic
# Fixed CVS update problem
#
# Revision 1.15  2005/03/02 11:58:24  buncic
# Fixed rsync update.
#
# Revision 1.14  2005/03/02 11:50:37  buncic
# Popup error box if synchronisation fails.
#
# Revision 1.13  2005/03/02 11:41:04  buncic
# Added option to install specific AliEn release.
#
# Revision 1.12  2005/03/01 13:53:34  buncic
# Be quite.
#
# Revision 1.11  2005/03/01 13:46:50  buncic
# Redefine TPUT when redirecting output to file.
#
# Revision 1.10  2005/03/01 13:28:13  buncic
# Fixed cvs checkout.
#
# Revision 1.9  2005/03/01 12:12:50  buncic
# Add -d option to cvs update.
#
# Revision 1.8  2005/03/01 12:07:00  buncic
# Ditto.
#
# Revision 1.7  2005/03/01 12:02:57  buncic
# Fixed typo.
#
# Revision 1.6  2005/03/01 11:56:47  buncic
# Create anonymous cvs login if it does not exist.
#
# Revision 1.5  2005/03/01 05:52:10  buncic
# Fixed platform names.
#
# Revision 1.4  2005/03/01 04:47:02  buncic
# Checksums for i386 binary packages.
#
#
# SYNOPSIS
#
# DESCRIPTION
#
# AUTHOR:
# Predrag Buncic, e-mail: Predrag.Buncic@cern.ch
#
# CREATION DATE:
#C<
#############################################################################
VERSION=0.02
###########################################################################
[ -f $HOME/.alien/installer.rc ] && . $HOME/.alien/installer.rc
###########################################################################
ALIEN_INSTALLER_HOME=${ALIEN_INSTALLER_HOME:=$HOME/alien}
ALIEN_INSTALLER_URL=${ALIEN_INSTALLER_URL:=rsync://alien.cern.ch:8873/releases} 
ALIEN_INSTALLER_CVS=${ALIEN_INSTALLER_CVS:=":pserver:cvs@alisoft.cern.ch:/soft/cvsroot"}
ALIEN_INSTALLER_BINARY_UPDATE=${ALIEN_INSTALLER_BINARY_UPDATE:=0}
ALIEN_INSTALLER_PREFIX=${ALIEN_INSTALLER_PREFIX:=/opt/alien}
ALIEN_INSTALLER_METHOD=${ALIEN_INSTALLER_METHOD:=bininstall}
ALIEN_INSTALLER_AUTODETECT=${ALIEN_INSTALLER_AUTODETECT:=false}
ALIEN_INSTALLER_TYPE=${ALIEN_INSTALLER_TYPE:=all}
ALIEN_INSTALLER_PLATFORM=${ALIEN_INSTALLER_PLATFORM:=}
ALIEN_DIALOG=${ALIEN_DIALOG:=dialog}
ALIEN_RELEASE=${ALIEN_RELEASE:=HEAD}
ECHO=""
###########################################################################
InstallerRcUpdate()
###########################################################################
{
  mkdir -p $HOME/.alien
  (
    echo "ALIEN_INSTALLER_HOME=$ALIEN_INSTALLER_HOME" 
    echo "ALIEN_INSTALLER_URL=$ALIEN_INSTALLER_URL" 
    echo "ALIEN_INSTALLER_CVS=$ALIEN_INSTALLER_CVS" 
    echo "ALIEN_INSTALLER_BINARY_UPDATE=$ALIEN_INSTALLER_BINARY_UPDATE" 
    echo "ALIEN_INSTALLER_PREFIX=$ALIEN_INSTALLER_PREFIX" 
    echo "ALIEN_INSTALLER_METHOD=$ALIEN_INSTALLER_METHOD" 
    echo "ALIEN_INSTALLER_AUTODETECT=$ALIEN_INSTALLER_AUTODETECT" 
    echo "ALIEN_INSTALLER_TYPE=$ALIEN_INSTALLER_TYPE" 
    echo "ALIEN_INSTALLER_PLATFORM=$ALIEN_INSTALLER_PLATFORM" 
    echo "ALIEN_DIALOG=$ALIEN_DIALOG" 
    echo "ALIEN_RELEASE=$ALIEN_RELEASE" 
  ) > $HOME/.alien/installer.rc

}
###########################################################################
Exit()
###########################################################################
{
  clear
  InstallerRcUpdate
  rm -rf $release_file $dialog_file
  exit $*
}

###########################################################################
Error()
###########################################################################
{
   dialog $style --msgbox "$1" $height $width 
   clear
   exit 1
}
###########################################################################
InstallerMake()
###########################################################################
{
  cmd=$1; shift 1
  if [ $# -eq 0 ]
  then
    $ECHO make -C $ALIEN_INSTALLER_HOME/meta/alien $cmd || Exit 1
  else
    list=$*
    for pkg in $list
    do
      dirs=`find $ALIEN_INSTALLER_HOME/apps -type d -mindepth 2 -maxdepth 2 -type d -path "$pkg"`
      for dir in $dirs 
      do
        if [ ! -d $dir ]
        then
          Error "No such package: $dir"
        fi
        $ECHO make -C $dir $cmd > install.log 2>&1 || Exit 1
      done
    done
  fi
}

###########################################################################
InstallerMakePkg()
###########################################################################
{
  cmd=$1; shift 1
  list=$*
  for dir in $list
  do
    if [ ! -d $dir ]
    then
      Error "No such package: $dir"
    fi
    $ECHO make -C $dir $cmd > install.log 2>&1 || Exit 1
  done
}

###########################################################################
InstallerSync()
###########################################################################
{
 (
  mkdir -p $ALIEN_INSTALLER_HOME || Exit 1
  cd $ALIEN_INSTALLER_HOME
  if [ ! -d CVS ]
  then
    rsync -acvz --exclude=alien.conf.mk $ALIEN_INSTALLER_URL/$ALIEN_RELEASE/ . || Error "Error: rsync update failed." 
  fi
  if [ -d CVS -a -f alien-installer ]
  then
    if [ ! -f $HOME/.cvspass ]
    then 
     touch $HOME/.cvspass
    fi
    if [ `cat $HOME/.cvspass | grep -c $ALIEN_INSTALLER_CVS` -eq 0 ]
    then 
     echo "$ALIEN_INSTALLER_CVS Ah<Z" >> $HOME/.cvspass
    fi
    if [ "$ALIEN_RELEASE" = "HEAD" ]
    then
      cvs -d $ALIEN_INSTALLER_CVS update -dPA || Error "Error: CVS update failed ($ALIEN_RELEASE)."
    else
      cvs -d $ALIEN_INSTALLER_CVS update -dP -r $ALIEN_RELEASE || Error "Error:CVS update failed ($ALIEN_RELEASE)."
    fi
  fi
  ) >> install.log 2>&1
}

###########################################################################
InstallerSetup()
###########################################################################
{
  height=8
  width=60
  style="--title AliEn-Configuratior-v0.01 --clear  --stdout"
  dialog_file=`mktemp /tmp/dialog.XXXXXX`

  if [ -f $ALIEN_INSTALLER_PREFIX/bin/dialog ]
  then
     export LD_LIBRARY_PATH=$ALIEN_INSTALLER_PREFIX/lib:$LD_LIBRARY_PATH
     export DYLD_LIBRARY_PATH=$LD_LIBRARY_PATH
     dialog_form=$ALIEN_INSTALLER_PREFIX/bin/dialog
     export TERMINFO_DIRS=/usr/share/terminfo:$ALIEN_INSTALLER_PREFIX/share/terminfo
  else
     dialog_form=dialog
  fi

  eval `$ALIEN_INSTALLER_PREFIX/bin/alien --printenv | grep -e ALIEN_ORGANISATION -e ALIEN_USER` || Exit 1

  eval `$ALIEN_INSTALLER_PREFIX/bin/alien configure` || Exit 1

  VARS="GLOBUS_LOCATION SWIG_LOCATION GSOAP_LOCATION CGSI_GSOAP_LOCATION CLASSAD_LOCATION MYPROXY_LOCATION"

  i=1
  form=""
  for var in $VARS
  do
    if [ "${!var}" != "" ]
    then
      form="$form $var  $i 1 ${!var}  $i 25 256 0"
      i=`expr $i + 1`
    else
      $ALIEN_DIALOG $style \
           --msgbox "Installation failed: $var undefined." $height $width
      Exit 1
    fi
  done

  $dialog_form $style --form 'This is your curent AliEn environment. Please edit.' 20 50 0  $form > $dialog_file 2>&1

  arg1=`cat $dialog_file | \
( 
  read GLOBUS_LOCATION 
  read SWIG_LOCATION 
  read GSOAP_LOCATION 
  read CGSI_GSOAP_LOCATION 
  read CLASSAD_LOCATION 
  read MYPROXY_LOCATION

  [ "$GLOBUS_LOCATION" != "" ] && \
                         arg=$arg" --globus-location $GLOBUS_LOCATION"
  [ "$SWIG_LOCATION" != "" ] && \
                         arg=$arg" --swig-location $SWIG_LOCATION"
  [ "$GSOAP_LOCATION" != "" ] && \
                         arg=$arg" --gsoap-location $GSOAP_LOCATION"
  [ "$CGSI_GSOAP_LOCATION" != "" ] && \
                         arg=$arg" --cgsi-gsoap-location $CGSI_GSOAP_LOCATION"
  [ "$CLASSAD_LOCATION" != "" ] && \
                         arg=$arg" --classad-location $CLASSAD_LOCATION"
  [ "$MYPROXY_LOCATION" != "" ] && \
                         arg=$arg" --myproxy-location $MYPROXY_LOCATION"

  echo $arg 
)`

  ALIEN_ORGANISATION=${ALIEN_ORGANISATION:=Alice}
  ALIEN_USER=${ALIEN_USER:=${USER}}
  ALIEN_PROMPT=${ALIEN_PROMPT:=alien}
  ALIEN_LDAP_DN=${ALIEN_LDAP_DN:=auto}
  ALIEN_MYPROXY_SERVER=${ALIEN_MYPROXY_SERVER:=none}
  ALIEN_MYPROXY_DOMAIN=${ALIEN_MYPROXY_DOMAIN:=none}

  VARS="ALIEN_ORGANISATION ALIEN_USER ALIEN_PROMPT ALIEN_LDAP_DN ALIEN_MYPROXY_SERVER ALIEN_MYPROXY_DOMAIN"

  i=1
  form=""
  for var in $VARS
  do
    if [ "${!var}" != "" ]
    then
      form="$form $var  $i  1 ${!var}   $i 25 25 0"
    else
      form="$form $var  $i  1 \"\"  $i 25 25 0"
    fi
    i=`expr $i + 1`
  done

  $dialog_form $style --form 'This is your curent AliEn configuration. Please edit.' 20 50 0  $form > $dialog_file 2>&1

  arg2=`cat $dialog_file | \
( 
  read ALIEN_ORGANISATION 
  read ALIEN_USER 
  read ALIEN_PROMPT 
  read ALIEN_LDAP_DN 
  read ALIEN_MYPROXY_SERVER 
  read ALIEN_MYPROXY_DOMAIN

  [ "$ALIEN_USER" != "" ] && \
                         arg=$arg" --user $ALIEN_USER"
  [ "$ALIEN_ORGANISATION" != "" ] && \
                         arg=$arg" --VO $ALIEN_ORGANISATION"
  [ "$ALIEN_PROMPT" != "" ] && \
                         arg=$arg" --prompt $ALIEN_PROMPT"
  [ "$ALIEN_LDAP_DN" != "" -a "$ALIEN_LDAP_DN" != "auto" ] && \
                         arg=$arg" --ldap-dn $ALIEN_LDAP_DN"
  [ "$ALIEN_MYPROXY_SERVER" != "" -a "$ALIEN_MYPROXY_SERVER" != "none" ] && \
                         arg=$arg" --myproxy-server $ALIEN_MYPROXY_SERVER"
  [ "$ALIEN_MYPROXY_DOMAIN" != "" -a "$ALIEN_MYPROXY_DOMAIN" != "none" ] && \
                         arg=$arg" --myproxy-domain $ALIEN_MYPROXY_DOMAIN"

  echo $arg
)` 

  $ALIEN_INSTALLER_PREFIX/bin/alien configure $arg1 $arg2 

  if [ $? -eq 1 ]
  then
    $ALIEN_DIALOG $style \
          --msgbox 'Configuration failed: Please check the log file.' $height $width
    $ALIEN_DIALOG $style \
          --textbox install.log 0 0  
    Exit 
  else
    $ALIEN_DIALOG $style --sleep 3 \
              --infobox 'You have sucessfuly installed and configured  AliEn gridware on your computer. Enjoy!' $height $width  
 
    Exit
  fi

  Exit
}

###########################################################################
InstallerCount()
###########################################################################
{
  grep -e NONE
}

###########################################################################
InstallerUpdate()
###########################################################################
{
  InstallerSync

  export GARAUTODETECT=$ALIEN_INSTALLER_AUTODETECT
  export TPUT=undef

  for meta in $ALIEN_INSTALLER_TYPE
  do
    pkgdir=`echo $meta | sed 's/"//g'`
    if [ "$pkgdir" = "" ]
    then
      continue
    fi 
    if [ -d $ALIEN_INSTALLER_HOME/meta/$pkgdir ]
    then
      packages=`cd $ALIEN_INSTALLER_HOME/meta/$pkgdir; make list_packages`
      npkgs=`echo $packages | wc -w`
      cd $ALIEN_INSTALLER_HOME
      if [ "$ALIEN_FORCE" = "1" ]
      then
        if [ -f $ALIEN_INSTALLER_PREFIX/bin/alien-perl ] 
        then
           rm -rf $ALIEN_INSTALLER_PREFIX/*
        fi 
        rm -rf apps/*/*/cookies/*binextract* apps/*/*/cookies/*relocate*
      fi
      i=0
      for pkg in $packages
      do
        g=$[$[i * 100]/$[npkgs + 1]];
        i=$[i + 1]
        echo "Updating $pkg..."
        InstallerMakePkg $ALIEN_INSTALLER_METHOD $pkg 
      done
    fi 
  done

  if [ -x  $ALIEN_INSTALLER_PREFIX/bin/alien-perl ]
  then
    echo 'Running post installation scripts...'
    $ALIEN_INSTALLER_PREFIX/bin/alien-perl --bootstrap --prefix $ALIEN_INSTALLER_PREFIX
  else
    echo 'Installation failed: alien-perl not found.' 
  fi

  $ALIEN_INSTALLER_PREFIX/bin/alien configure >> install.log
}


###########################################################################
InstallerUI()
###########################################################################
{
  height=8
  width=60
  cmd="./alien-installer "

  export TPUT=undef

  style="--title AliEn-Installer-v0.01 --clear"

  release_file=`mktemp /tmp/release.XXXXXX`
  dialog_file=`mktemp /tmp/dialog.XXXXXX`

  wget -O $release_file http://alien.cern.ch/Releases > /dev/null 2>&1 

  list=`grep -v -e HEAD -e "^#" $release_file |  awk -F: '{printf("%s %s 0 ",$3,$2)}'`

  $ALIEN_DIALOG $style \
            --radiolist "PLEASE SELECT ALIEN RELEASE:" 0 0 0 \
                        "HEAD" "Curent CVS HEAD (Warning: use at own risk!)" on \
                        $list 2>$dialog_file || Exit 1

  release=`cat $dialog_file`

  ALIEN_RELEASE=$release

  cmd=$cmd" --with-alien-release=$ALIEN_RELEASE "

  $ALIEN_DIALOG  $style \
          --radiolist "PLEASE SELECT THE INSTALLATION METHOD"  0 0 0 \
                      "Binary" "Download precompiled packages"   on  \
                      "Source" "Compile everything from sources" 0 2>$dialog_file  || Exit 1

  method=`cat $dialog_file`

  if [ "$method" == "Source" ]
  then
    ALIEN_INSTALLER_METHOD='reinstall'
    ALIEN_INSTALLER_BINARY_UPDATE=0
  else
    cmd=$cmd" -b "
    ALIEN_INSTALLER_METHOD='bininstall'
    ALIEN_INSTALLER_BINARY_UPDATE=1
  fi

  $ALIEN_DIALOG  $style --defaultno \
          --yesno "Would you like installer to autodetect and reuse already installed software components on your system?" 0 0 

  if [ $? -eq 0 ] 
  then
    ALIEN_INSTALLER_AUTODETECT="true"
  fi

  export GARAUTODETECT=$ALIEN_INSTALLER_AUTODETECT

  workspace=$ALIEN_INSTALLER_HOME

  $ALIEN_DIALOG  $style \
          --yesno "Default workspace location for this installation is $workspace. Press YES if you want to keep it that way or press NO if you want to pick another location." 0 0 

  if [ $? -eq 1 ]
  then
    $ALIEN_DIALOG $style \
               --inputbox 'Please enter workspace directory:' $height $width \
               $workspace 2>$dialog_file || Exit 1
    workspace=`cat $dialog_file`
  fi

  mkdir -p $workspace || Error "Cannot create $workspace directory."

  ALIEN_INSTALLER_HOME=$workspace

  cd $workspace || ( Error  "Cannot change directory to $workspace" )

  cmd=$cmd" -p $workspace "

  $ALIEN_DIALOG $style --sleep 3 \
                --infobox 'Synchronizing with the server.' $height $width

  InstallerSync

  cmd=$cmd"configure "

  platform=$ALIEN_INSTALLER_PLATFORM

  if [ "$method" == "Binary" ]
  then
    if [ "$ALIEN_INSTALLER_PLATFORM" == "" ]
    then 

      p=`$workspace/config.guess`

      case $p in
        i*86-*-linux-gnu)
          platform=i686-pc-linux-gnu
          ;;
        x86_64-*-linux-gnu)
          platform=i686-pc-linux-gnu
          ;;
        powerpc-apple-darwin7.*)
          platform=powerpc-apple-darwin7.7.0
          ;;
        ia64-*-linux-gnu)
          platform=ia64-unknown-linux-gnu
          ;;
         *)
          Error "Unknown or unsupported platform: $platform"
          ;;
      esac

    fi

    $ALIEN_DIALOG  $style \
            --yesno "Detected/configured platform setting for this machine is $platform. Press YES if you want to keep it that way or press NO if you want to select another supported platform." 0 0

    if [ $? -eq 1 ] 
    then 
       $ALIEN_DIALOG $style \
                  --radiolist 'PLEASE SELECT PLATFORM:' 0 0 0 \
                              'i686-pc-linux-gnu'         'Linux i686' on \
                              'ia64-unknown-linux-gnu'    'Linux ia64' 0  \
                              'powerpc-apple-darwin7.7.0' 'MacOS X'    0  2>$dialog_file || Exit 1 
      prefix=`cat $dialog_file`
      cmd=$cmd"--with-platform=$platform "
    fi
  fi

  ALIEN_INSTALLER_PLATFORM=$platform  

  prefix=$ALIEN_INSTALLER_PREFIX

  if [ "$prefix" = "$workspace" ]
  then
    prefix="unknown"
  fi

  $ALIEN_DIALOG $style \
         --yesno "Default installation location location is $prefix. Press YES if you want to keep it that way or press NO if you want to select another location. Please note that the installation directory must be different form workspace directory." $height $width

  if [ $? -eq 1 ]
  then
    while :
    do
     $ALIEN_DIALOG $style \
                    --inputbox 'Please specify installation directory'  $height $width \
                     $prefix 2>$dialog_file || Exit 1
     prefix=`cat $dialog_file`
     if [ "$prefix" = "$workspace" ]
     then
       $ALIEN_DIALOG $style --sleep 3 \
              --infobox "Installation prefix ($prefix) must be different from workspace ($workspace)." $height $width
     else
       break
     fi
    done
  fi

  if [ -d $prefix ]
  then
    $ALIEN_DIALOG  $style \
            --yesno "Directory $prefix already exist. Press YES if you want to overwrite existing files, press NO if you want cancel the installation." 0 0 || Exit 1
  fi 

  ALIEN_INSTALLER_PREFIX=$prefix

  #  [ -d $prefix ] &&  rm -rf $prefix/*  

  mkdir -p $prefix || Error "Cannot create $prefix directory"

  cmd=$cmd"--prefix=$prefix"

  $ALIEN_DIALOG $style \
               --checklist 'PLEASE SELECT THE INSTALLATION TYPE' 0 0 0  \
                           'all'     'All packages'             0  \
                           'client'  'Client'                   0  \
                           'gshell'  'gShell and ROOT'          0  \
                           'portal'  'Portal'                   0  \
                           'site'    'Site CE/SE services'      0  \
                           'monitor' 'MonaLisa site monitor'    0  \
                           'core'    'Core VO services'         0  \
                           'wn'      'Worker node'              0 2>$dialog_file || Exit 1

  list=\"$(cat $dialog_file | sed 's/"//g' )\"

  if [ "$list" = "" ]
  then
    Error "Nothing selected - exiting..."
  fi

  ALIEN_INSTALLER_TYPE="$list"
  
  $ALIEN_DIALOG $style --sleep 3 \
              --infobox 'Configuring...' $height $width
 
  InstallerRcUpdate

  echo $cmd > install.log

  (autoconf; $cmd ) >> install.log 2>&1

  for meta in $list
  do
    pkgdir=`echo $meta | sed 's/"//g'`
    if [ "$pkgdir" = "" ]
    then
      continue
    fi 
    $ALIEN_DIALOG $style --sleep 3 \
                  --infobox "Getting the list of packages to install for $pkgdir..." $height $width
    if [ -d $workspace/meta/$pkgdir ]
    then
      packages=`cd $workspace/meta/$pkgdir; make list_packages`
      npkgs=`echo $packages | wc -w`
      cd $workspace
      i=0
      for pkg in $packages
      do
        g=$[$[i * 100]/$[npkgs + 1]];
        i=$[i + 1]
        echo XXX
        echo "Installing $pkg..."
        echo XXX
        InstallerMakePkg $ALIEN_INSTALLER_METHOD $pkg >> $workspace/install.log
        echo $g
      done | $ALIEN_DIALOG $style --gauge "Installing $pkg..."  $height $width
    fi 
  done

  if [ -x $prefix/bin/alien-perl ]
  then
    $ALIEN_DIALOG $style --sleep 3 \
                  --infobox 'Running post installation scripts...' $height $width
    $prefix/bin/alien-perl --bootstrap --prefix $prefix >> install.log
 
    $ALIEN_DIALOG $style --sleep 3 \
                --infobox 'Done.' $height $width
  else
    $ALIEN_DIALOG $style \
            --msgbox 'Installation failed: alien-perl not found.' $height $width
    $ALIEN_DIALOG $style \
          --textbox install.log 0 0  
    Exit 
  fi

  InstallerSetup

  rm -rf $release_file $dialog_file
}

###########################################################################
###########################################################################

args=$*
 
while [ $# -gt 0 ]
do
    case $1 in
        selfupdate|sync)
            InstallerSync 
            name=`echo $0 | sed 's%./%%'`
            exec $ALIEN_INSTALLER_HOME/alien-installer --copy $0
           ;;
        --copy)
            shift 1
            cp -f $0 $1
	    exit
           ;;
        -u|--url)
            shift 1
	    ALIEN_INSTALLER_URL=$1
            shift 1
           ;;
        -r|--release)
            shift 1
	    ALIEN_RELEASE=$1
            shift 1
           ;;
        -t|--type)
            shift 1
	    ALIEN_INSTALLER_TYPE=$1
            shift 1
           ;;
        --platform)
            shift 1
	    ALIEN_INSTALLER_PLATFORM=$1
            shift 1
           ;;
        --method)
            shift 1
	    ALIEN_INSTALLER_METHOD=$1
            shift 1
           ;;
        --prefix)
            shift 1
	    ALIEN_INSTALLER_PREFIX=$1
            shift 1
           ;;
        -b|--binary|--binary-update)
            shift 1
	    ALIEN_INSTALLER_BINARY_UPDATE=1
           ;;
        -a|--autodetect)
            shift 1
	    ALIEN_INSTALLER_AUTODETECT=1
           ;;
        -f|--force)
            shift 1
	    ALIEN_FORCE=1
           ;;
        -r|--runtime)
            shift 1
	    export INSTALL_FILTER="doc/% %.a %.la info/% share/doc/%" 
           ;;
        --pretend)
            shift 1
	    ECHO=echo
           ;;
        -p|--build-prefix|--home)
            shift 1
	    ALIEN_INSTALLER_HOME=$1
            shift 1
            mkdir -p $ALIEN_INSTALLER_HOME || exit 1
           ;;
        update|update-all)
            shift 1
	    InstallerUpdate $*
            exit
           ;;
        make)
            shift 1
            InstallerMake $*
            exit
           ;;
        test)
            shift 1
            InstallerMake test $*
            exit
           ;;
        makepkg)
            shift 1
            InstallerMakePkg $*
            exit
           ;;
        remove)
            shift 1
            InstallerMake buildclean $*
            exit
           ;;
        purge)
            shift 1
            InstallerMake clean $*
            exit
           ;;
        install)
           shift 1
           case $ALIEN_INSTALLER_BINARY_UPDATE in
             1|true|TRUE|True|yes|Yes|YES|Y)
               InstallerMake bininstall $*
               ;;
             *)
               InstallerMake install $*
               ;;
           esac
           exit
           ;;
        configure)
            shift 1
            cd $ALIEN_INSTALLER_HOME && autoconf && ./configure $*
            exit
           ;;
        setup)
            shift 1
            InstallerSetup $*
            exit
           ;;
        -q)
           shift 1
	   QUIET=1
           ;;
        -v|--trace)
           shift 1
           set -vx
           ;;
        -V)
           print $VERSION
           exit
           ;; 
        -y)
           shift 1
           YES=1
           ;;
        --help|-help|-h)
            cat<<EOF

Usage: alien-installer [options] command [package...]

Common commmands:
  install    - install/update the named packages
  remove     - remove the named packages
  purge      - same as remove but also removes all configuration files
  update     - update the named packages
  sync       - upgrade to the latest release
  update-all - update all installed packages
  configure  - rerun the configuration process
  list       - list available packages, optionally filtering by name,
  apropos    - list packages matching a search keyword
  describe   - display a detailed description of the named packages
  index      - force rebuild of package cache 

Options:
  -b, --binary       - use binary packages 
  -p, --build-prefix - installation directory
  -u, --url          - cache url         
  -h, --help         - display this help text
  -q, --quiet        -  be less verbose, opposite of --verbose
  -V, --version      - display version information
  -v, --verbose      - to be more verbose, opposite of --quiet

Configuration:

 alien-installer <installer option> configure <configure options>
 
Installer options:
  --url <URL>                [rsync://alien.cern.ch:8873/releases]
  --release <RELEASE>        [HEAD] 
  --type <installation type> [all,client,portal,site,core,wn]
  --platform <platform>      [,i686-pc-linux-gnu,ia64-unknown-linux-gnu,powerpc-apple-darwin7.7.0]
  --method <method>          [bininstall,install]  
  --prefix <path>            [/opt/alien]  
  --home <path>              [$HOME/alien]
  --binary-update   
  --autodetect
 
Configure options:
  --prefix=dir                   Installation prefix 
  --with-globus-location=dir     Globus directory
  --with-gpt-location=dir        GPT directory
  --with-globus-flavor=string    Globus flavor
  --with-glite-build=string      gLite build id
  --with-cache-dir=dir           Local package cache
  --with-cache-url=url           Remote package cache
  --with-platform=string         Platform
EOF


            exit
           ;;
        list|apropos|index|describe)
            shift 1
            echo "Sorry, not implemented (yet)..."
            exit 1
           ;;
        *)
           shift 1
           ;;
    esac
done

InstallerUI $*
